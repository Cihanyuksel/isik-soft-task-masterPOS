{/*
<div className="flex flex-col">
  <div className="flex items-center px-8 py-4 bg-stone-50 border-b border-gray-200">
    <div className="flex-[0_0_60px] text-sm font-semibold text-zinc-500">
      <input type="checkbox" onChange={handleSelectAll} checked={selectedProducts.length === products.length &&
      products.length > 0} />
    </div>

    <div className="flex-1 text-sm font-semibold text-zinc-500">Product</div>
    <div className="flex-1 text-sm font-semibold text-zinc-500">Description</div>
    <div className="flex-1 text-sm font-semibold text-zinc-500">Price</div>
    <div className="flex-1 text-sm font-semibold text-zinc-500">Stock</div>
    <div className="flex-1 text-sm font-semibold text-zinc-500">Barcode</div>
    <div className="flex-1 text-sm font-semibold text-zinc-500">Code</div>
    <div className="flex-1 text-sm font-semibold text-zinc-500">Status</div>
    <div className="flex-[0_0_60px] text-sm font-semibold text-center text-zinc-500"></div>
  </div>
  <div className="min-h-[500px]">
    {isFetching ? (
    <div className="flex justify-center items-center h-full">
      <div className="loader" />
    </div>
    ) : ( filteredProducts.map((product) => (
    <div
      key="{product.id}"
      className="flex items-center px-8 py-5 border-b border-neutral-100 hover:bg-gray-50 transition ease-in-out"
    >
      <div className="flex-[0_0_60px]">
        <input type="checkbox" checked={selectedProducts.includes(product.id)} onChange={() =>
        handleSelectProduct(product.id)} />
      </div>
      <div className="flex flex-1 gap-3 items-center">
        <img
          src="{product.imageUrl}"
          alt="{product.name}"
          className="w-12 h-12 rounded-lg bg-neutral-100 object-cover"
        />
        <div className="flex flex-col gap-1">
          <h4 className="text-sm font-semibold text-neutral-800 dark:text-neutral-200 ">{product.name}</h4>
          <p className="text-xs text-zinc-500 dark:text-neutral-200">{product.category}</p>
        </div>
      </div>
      <div className="flex-1 text-sm text-neutral-800 dark:text-neutral-200">{product.description}</div>
      <div className="flex-1 text-sm text-neutral-800 dark:text-neutral-200">${product.price.toFixed(2)}</div>
      <div className="flex-1 text-sm text-neutral-800 dark:text-neutral-200">{product.stock}</div>
      <div className="flex-1 text-sm text-neutral-800 dark:text-neutral-200">{product.barcode}</div>
      <div className="flex-1 text-sm text-neutral-800 dark:text-neutral-200">{product.productCode}</div>
      <div className="flex-1 text-sm text-neutral-800 dark:text-neutral-200">
        <StatusBadge status="{product.status}" />
      </div>
      <div className="flex-[0_0_60px] text-center">
        <button>
          <PiDotsThreeCircleThin className="text-2xl cursor-pointer" />
        </button>
      </div>
    </div>
    )) )}
  </div>
</div>
*/}
<!-- ------------------------------- -->

{/*
<table className="min-w-full text-sm text-left text-neutral-800 dark:text-neutral-200 border-separate border-spacing-0">
  <thead className="bg-stone-50 border-b border-gray-200">
    <tr>
      <th className="w-[60px] px-4 py-4 text-zinc-500 font-semibold">
        <input type="checkbox" onChange={handleSelectAll} checked={selectedProducts.length === products.length &&
        products.length > 0} />
      </th>
      <th className="px-4 py-4 text-zinc-500 font-semibold">Product</th>
      <th className="px-4 py-4 text-zinc-500 font-semibold">Description</th>
      <th className="px-4 py-4 text-zinc-500 font-semibold">Price</th>
      <th className="px-4 py-4 text-zinc-500 font-semibold">Stock</th>
      <th className="px-4 py-4 text-zinc-500 font-semibold">Barcode</th>
      <th className="px-4 py-4 text-zinc-500 font-semibold">Code</th>
      <th className="px-4 py-4 text-zinc-500 font-semibold">Status</th>
      <th className="w-[60px] px-4 py-4 text-zinc-500 font-semibold text-center"></th>
    </tr>
  </thead>

  <tbody className="min-h-[500px]">
    {isFetching ? (
    <tr>
      <td colSpan="{9}">
        <div className="flex justify-center items-center h-40">
          <div className="loader" />
        </div>
      </td>
    </tr>
    ) : ( filteredProducts.map((product) => (
    <tr key="{product.id}" className="border-b border-neutral-100 hover:bg-gray-50 transition ease-in-out">
      <td className="w-[60px] px-4 py-5">
        <input type="checkbox" checked={selectedProducts.includes(product.id)} onChange={() =>
        handleSelectProduct(product.id)} />
      </td>

      <td className="px-4 py-5">
        <div className="flex items-center gap-3">
          <img
            src="{product.imageUrl}"
            alt="{product.name}"
            className="w-12 h-12 rounded-lg bg-neutral-100 object-cover"
          />
          <div className="flex flex-col gap-1">
            <h4 className="font-semibold">{product.name}</h4>
            <p className="text-xs text-zinc-500">{product.category}</p>
          </div>
        </div>
      </td>

      <td className="px-4 py-5">{product.description}</td>
      <td className="px-4 py-5">${product.price.toFixed(2)}</td>
      <td className="px-4 py-5">{product.stock}</td>
      <td className="px-4 py-5">{product.barcode}</td>
      <td className="px-4 py-5">{product.productCode}</td>
      <td className="px-4 py-5">
        <StatusBadge status="{product.status}" />
      </td>

      <td className="w-[60px] px-4 py-5 text-center">
        <button>
          <PiDotsThreeCircleThin className="text-2xl cursor-pointer" />
        </button>
      </td>
    </tr>
    )) )}
  </tbody>
</table>
*/}
